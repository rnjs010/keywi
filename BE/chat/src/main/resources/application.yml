server:
  port: 8082  # 채팅 서비스 포트

spring:
  application:
    name: chat

  # Spring Cloud Config 비활성화
  cloud:
    config:
      enabled: false
      import-check:
        enabled: false

  # MySQL 설정
  datasource:
    url: jdbc:mysql://localhost:3306/keywi?createDatabaseIfNotExist=true
    username: root
    password: ssafy
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  # MongoDB 설정
  data:
    mongodb:
      host: localhost
      port: 27017
      database: keyboard-chat

  # Kafka 설정
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: chat-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.ssafy.chat.dto
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka 설정
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    # Eureka 서버가 없는 경우 아래 설정 추가 가능
    # register-with-eureka: false
    # fetch-registry: false
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true

# JWT 설정
jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK
  token-validity-in-seconds: 86400

# FCM 설정
fcm:
  enabled: false
  service-account-file: classpath:firebase-service-account.json

logging:
  level:
    root: INFO
    com.ssafy.chat: DEBUG
    org.springframework.web: DEBUG